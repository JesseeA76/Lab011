import streamlit as st
import pandas as pd
import numpy as np
import pickle
# Try importing scikit-learn (if it fails, prompt the user to install it)
try:
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
except ImportError:
st.error("‚ùå Scikit-learn is not installed. Please run: pip install scikit-learn")
st.stop()
# Load dataset
def load_data():
try:
df = pd.read_csv("AmesHousing.xlsx.csv")  # Make sure the CSV file is in the same directory
return df
except Exception as e:
st.error(f"‚ùå Error loading dataset: {e}")
return None
df = load_data()
if df is not None:
# Select important features
features = ['LotArea', 'YearBuilt', 'TotalBsmtSF', 'GrLivArea']
# Remove missing values
df = df[features + ['SalePrice']].dropna()
# Split dataset
X = df[features]
y = df['SalePrice']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Train model
model = LinearRegression()
model.fit(X_train, y_train)
# Save model
with open("model.pkl", "wb") as f:
pickle.dump(model, f)
# Streamlit UI
st.title("üè° Ames Housing Price Predictor")
# Input fields
lot_area = st.number_input("Lot Area", min_value=500, value=7500, step=100)
year_built = st.number_input("Year Built", min_value=1800, max_value=2025, value=2000, step=1)
total_bsmt_sf = st.number_input("Total Basement SF", min_value=0, value=1000, step=50)
gr_liv_area = st.number_input("Above Ground Living Area SF", min_value=500, value=1500, step=50)
# Predict button
if st.button("Predict Price"):
with open("model.pkl", "rb") as f:
loaded_model = pickle.load(f)
input_data = np.array([[lot_area, year_built, total_bsmt_sf, gr_liv_area]])
prediction = loaded_model.predict(input_data)
st.success(f"üè† Estimated House Price: **${prediction[0]:,.2f}**")
reticulate::repl_python()
setwd("~/Lab 11")
